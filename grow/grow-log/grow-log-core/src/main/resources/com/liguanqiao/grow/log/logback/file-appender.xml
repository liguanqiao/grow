<?xml version="1.0" encoding="UTF-8"?>
<included>
    <!--文件日志-->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--实时日志输出文件-->
        <File>${LOG_FILE}</File>
        <!--日志文件滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${ROLLING_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.log.gz}</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>${LOG_FILE_MAX_HISTORY:-7}</MaxHistory>
            <!--日志文件压缩-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件大小-->
                <maxFileSize>${LOG_FILE_MAX_SIZE:-100MB}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件存储总大小-->
            <totalSizeCap>${LOG_FILE_TOTAL_SIZE_CAP:-0}</totalSizeCap>
            <!--在项目启动的时候是否清除历史日志-->
            <cleanHistoryOnStart>${LOG_FILE_CLEAN_HISTORY_ON_START:-false}</cleanHistoryOnStart>
        </rollingPolicy>
        <!--日志文件打印格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--异步文件日志-->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!--不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold>0</discardingThreshold>
        <!--设置队列入队时非阻塞，当队列满时会直接丢弃日志，但是对性能提升极大-->
        <neverBlock>true</neverBlock>
        <!--更改默认的队列的深度,该值会影响性能.默认值为256-->
        <queueSize>2048</queueSize>
        <!--添加附加的appender,最多只能添加一个-->
        <appender-ref ref="FILE"/>
    </appender>
</included>